import codecademylib3_seaborn
import matplotlib.pyplot as plt
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from svm_visualization import draw_boundary
from players import aaron_judge, jose_altuve, david_ortiz
fig, ax = plt.subplots()
print(aaron_judge.columns)
print(aaron_judge.description.unique())
print(aaron_judge.type.unique())
aaron_judge['type'] = aaron_judge['type'].map({'S': 1, 'B': 0})
aaron_judge = aaron_judge.dropna(subset = ['type', 'plate_x', 'plate_z'])
print(aaron_judge.type)
plt.scatter( x = aaron_judge['plate_x'], y = aaron_judge['plate_z'], c = aaron_judge['type'], cmap = plt.cm.coolwarm, alpha = 0.25)
training_set, validation_set = train_test_split(aaron_judge, random_state = 1)
classifier = SVC(kernel = 'rbf', gamma = 100, C = 100)
classifier.fit(training_set[['plate_x', 'plate_z']], training_set['type'])
draw_boundary(ax, classifier)
plt.show()
print(classifier.score(validation_set[['plate_x', 'plate_z']], validation_set['type']))

plt.clf()

def strike_zone(player):
  player['type'] = player['type'].map({'S': 1, 'B': 0})
  player = player.dropna(subset = ['type', 'plate_x', 'plate_z'])
  plt.scatter( x = player['plate_x'], y = player['plate_z'], c = player['type'], cmap = plt.cm.coolwarm, alpha = 0.25)
  training_set, validation_set = train_test_split(player, random_state = 1)
  classifier = SVC(kernel = 'rbf', gamma = 100, C = 100)
  classifier.fit(training_set[['plate_x', 'plate_z']], training_set['type'])
  draw_boundary(ax, classifier)
  plt.xlabel("Distance of Pitch Left(Negative) or Right(Positive) From Center of Home Plate")
  plt.ylabel("Height of Pitch from Ground")
  plt.title("Strike Zone Data")
  plt.show()
  print(classifier.score(validation_set[['plate_x', 'plate_z']], validation_set['type']))

strike_zone(jose_altuve)

